{"version":3,"file":"xy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t * \n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t * \n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t * \n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t * \n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\t \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t * \n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.* \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tthis.handleWheel(event);\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: event.clientX, y: event.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: IPointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tlet local = this.plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\t\t\tif (local.x == downPoint.x && local.y == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tlet snapToSeries = cursor.get(\"snapToSeries\");\n\n\t\t\tif (cursor._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\t// removing x and y to solve #72225\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tconst hh = this.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\ttooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (prevY < 0) {\n\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = prevY;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - prevY;\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - prevY;\n\t\t\t\t\t\t\tif (top < prevBottom) {\n\t\t\t\t\t\t\t\ttop = prevBottom;\n\t\t\t\t\t\t\t\tbottom = top + tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\n\t\t\t\tif (prevY > hh) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = hh;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - (hh - prevY);\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - (hh - prevY);\n\t\t\t\t\t\t\tif (bottom > prevBottom) {\n\t\t\t\t\t\t\t\tbottom = prevBottom\n\t\t\t\t\t\t\t\ttop = bottom - tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t * \n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t * \n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n\t/**\n\t * Last global point to which cursor moved\n\t */\n\tlastPoint?: IPoint;\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\n\t\tthis._disposers.push(this.lineX.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\n\t\tthis._disposers.push(this.lineY.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove(ev.keyCode);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(keyCode: number) {\n\t\tlet dir: any = \"\";\n\t\tlet position = 0;\n\t\tlet increment = 0.1;\n\t\tconst chart = this.chart;\n\n\t\tif (this._root.focused(this.lineX)) {\n\t\t\tif (chart && chart.xAxes.length) {\n\t\t\t\tincrement = chart.xAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionX\", 0);\n\t\t\tdir = \"positionX\";\n\t\t\tif (keyCode == 37) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 39) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\t\telse if (this._root.focused(this.lineY)) {\n\t\t\tif (chart && chart.yAxes.length) {\n\t\t\t\tincrement = chart.yAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionY\", 0);\n\t\t\tdir = \"positionY\";\n\t\t\tif (keyCode == 38) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 40) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\n\t\tif (position < 0) {\n\t\t\tposition = 0;\n\t\t}\n\t\telse if (position > 1) {\n\t\t\tposition = 1;\n\t\t}\n\n\t\tif (dir != \"\") {\n\t\t\tthis.set(dir, position);\n\t\t}\n\t}\n\n\tprotected _handleLineFocus(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\"),\n\t\t\tpositionY: this.getPrivate(\"positionY\"),\n\t\t\talwaysShow: true\n\t\t});\n\t}\n\n\tprotected _handleLineBlur(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: undefined,\n\t\t\tpositionY: undefined,\n\t\t\talwaysShow: false\n\t\t});\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\t\t\tthis.setPrivate(\"lastPoint\", rootPoint);\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t * \n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.adapters.disable(\"text\");\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (!priority) {\n\t\t\t\tpriority = \"end\";\n\t\t\t}\n\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t}\n\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t}\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t\tthis._root._markDirty();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._sAnimation) {\n\t\t\t\tthis._sAnimation.stop();\n\t\t\t}\n\t\t\tif (this._eAnimation) {\n\t\t\t\tthis._eAnimation.stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tghostLabel.set(\"text\", text);\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t * @ignore\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif(this.get(\"opposite\")){\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tvar w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport type { TimeUnit } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `startLocation` is not supported by [[GaplessDateAxis]].\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `endLocation` is not supported by [[GaplessDateAxis]].\n\t * \n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `0` (zero) to `1` (one), meaning start and end of the cell.\n\t *\n\t * If not set, it will use cell's start tiemstamp.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n\n\t/**\n\t * Kicks in when data grouping is on, and current group interval changes, e.g. via zooming the chart.\n\t *\n\t * @since 5.2.43\n\t */\n\tgroupintervalchanged: {}\n\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tvar maxZoomFactor = this.get(\"maxZoomFactor\");\n\t\tif (maxZoomFactor != null && maxZoomFactor != Infinity) {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\n\t\t}\n\t\telse {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\n\t\t\tthis._dataGrouped = true; // helps to avoid double grouping\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\t\t\t\n\n\t\t\t$array.each(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstDate: Date;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstDate = new Date(dataItems[0].get(key as any));\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field] = 1;\n\t\t\t\t\t\t\t\tsum[field] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value !== undefined) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Min\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tlet selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\tlet selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"endLocation\") == 0) {\n\t\t\t\tselectionMax += 1;\n\t\t\t}\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\n\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tthis.markDirtyExtremes();\n\n\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\t\tconst type = \"groupintervalchanged\";\n\t\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet endIndex = end.index;\n\n\t\t\t\t\tlet endIndex2 = endIndex;\n\t\t\t\t\tif (endIndex2 > 0) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _getM(timeUnit:TimeUnit){\n\t\tif(timeUnit == \"month\" || timeUnit == \"year\" || timeUnit == \"day\"){\n\t\t\treturn 1.05;\n\t\t}\n\t\treturn 1.01;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\t\tconst selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\n\n\t\t\t\tlet endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\n\t\t\t\tendValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\n\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\t\t\t\tvalue = endValue;\n\n\t\t\t\tif (value == previousValue) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _getDelta() {\n\t\tthis._deltaMinMax = this.baseDuration() / 2;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\tconst timezone = this._root.timezone;\n\t\tconst utc = this._root.utc;\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\tlet startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\tendTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\tconst timezone = this._root.timezone;\n\t\tconst utc = this._root.utc;\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\tlet startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\tendTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif (!dataItem.open) {\n\t\t\tdataItem.open = {};\n\t\t}\n\t\tif (!dataItem.close) {\n\t\t\tdataItem.close = {};\n\t\t}\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = dataItem.open![field];\n\t\t\t\tlet endTime = dataItem.close![field];\n\t\t\t\t// this is done to save cpu, as rounding is quite expensive, especially with timezone set. \n\t\t\t\t// if value is between prev start and end, it means it didn't change, all is fine.\n\t\t\t\tif (value >= startTime && value <= endTime) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\t\t\tconst utc = this._root.utc;\n\t\t\t\t\tconst timezone = this._root.timezone\n\t\t\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\t\t\tconst count = baseInterval.count;\n\t\t\t\t\tstartTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tendTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\n\t\t\t\t\tendTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\n\t\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t\t}\n\n\t\t\t\tthis._updateDates(startTime);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tif (!$type.isNaN(value)) {\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\t\t\tconst count = baseInterval.count;\n\n\t\t\tvalue = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\n\t\t\tif (timezone) {\n\t\t\t\tvalue = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\t\tduration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\n\t\t\t}\n\n\t\t\treturn this.valueToPosition(value + duration * location);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tif (this.getPrivate(\"min\") != null) {\n\t\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\tlet value = this.positionToValue(position);\n\t\t\tlet date = new Date(value);\n\n\t\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\t\t\treturn this._root.dateFormatter.format(new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tif (location == null) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tvar diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(first){\n\t\t\t\treturn first;\t\n\t\t\t}\n\n\t\t\tif(second){\n\t\t\t\treturn second;\t\n\t\t\t}\t\t\t\n\t\t}\n\t\telse {\n\t\t\t// @todo check if is in range\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t * @ignore\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this.baseDuration() / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\r\n\t/**\r\n\t * An index of a data item.\r\n\t */\r\n\tindex?: number\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tprotected _dates: Array<number> = [];\r\n\r\n\tprotected _updateDates(date: number) {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\tif (!result.found) {\r\n\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tthis._dates.length = 0;\r\n\r\n\t\t$array.each(this.series, (series) => {\r\n\t\t\tlet field = \"valueX\";\r\n\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\tfield = \"valueY\"\r\n\t\t\t}\r\n\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\tthis._updateDates(dataItem.open![field]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst len = dates.length - startLocation - (1 - endLocation);\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn (index - startLocation) / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn (index - startLocation) / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tlet len = Math.round(this._dates.length - startLocation - (1 - endLocation));\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn this._dates[findex] + (index - findex + startLocation) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._dates.length - this.get(\"startLocation\", 0) - (1 - this.get(\"endLocation\", 1)));\r\n\t}\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\t\t\tfrequency = Math.max(1, frequency);\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\tfor (let j = 0, length = this.dataItems.length; j < length; j++) {\r\n\t\t\t\tthis.dataItems[j].hide();\r\n\t\t\t}\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < this.baseDuration()) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet selectedItems: Array<number> = [];\r\n\t\t\tlet firstDate = new Date();\r\n\t\t\tif (this._dates[0]) {\r\n\t\t\t\tfirstDate = new Date(this._dates[0]);\r\n\t\t\t}\r\n\r\n\t\t\tlet startDate = $time.round(new Date(this.getPrivate(\"min\", 0)), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone);\r\n\t\t\tlet value = $time.add(startDate, gridInterval.timeUnit, -1, this._root.utc, this._root.timezone).getTime();\r\n\r\n\t\t\tlet selectionMax = this.getPrivate(\"selectionMax\")\r\n\r\n\t\t\tlet previousPosition = -Infinity;\r\n\t\t\tlet minDifference = (this.get(\"end\", 1) - this.get(\"start\", 0)) / maxCount;\r\n\r\n\t\t\twhile (value <= selectionMax) {\r\n\t\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\t\tlet realValue = this._dates[index];\r\n\r\n\t\t\t\tif (realValue < value) {\r\n\t\t\t\t\tfor (let i = index, len = this._dates.length; i < len; i++) {\r\n\t\t\t\t\t\tlet realValue = this._dates[i];\r\n\t\t\t\t\t\tif (realValue >= value) {\r\n\t\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet position = this.valueToPosition(realValue);\r\n\t\t\t\tif (position - previousPosition >= minDifference * 0.95) {\r\n\t\t\t\t\t$array.move(selectedItems, index);\r\n\t\t\t\t\tpreviousPosition = position;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet previousValue = value;\r\n\t\t\t\tvalue += $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\r\n\t\t\t\tvalue = $time.round(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\tif (value == previousValue) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet previousValue = value - intervalDuration * 10;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\r\n\t\t\t\t\tif (index > startIndex - 100 && index < endIndex + 100) {\r\n\r\n\t\t\t\t\t\tlet format = formats[gridInterval.timeUnit];\r\n\r\n\t\t\t\t\t\tformat = formats[gridInterval.timeUnit];\r\n\t\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\r\n\t\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n\t\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem.isHidden()) {\r\n\t\t\t\t\t\t\tdataItem.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis._updateGhost();\r\n\t}\r\n}","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within ucurrently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis fooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tminLog = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet previous = -Infinity;\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tconst strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\n\n\t\t\tlet start = $math.round(this.valueToFinalPosition(selectionMin), len);\n\t\t\tlet end = $math.round(this.valueToFinalPosition(selectionMax), len);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\n\t\tthis._fixZoomFactor();\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _fixZoomFactor() {\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker(this.get(\"tooltipDataItem\"));\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\n\t/**\n\t * X0 position of the low value in pixels.\n\t */\n\tlowX0?: number;\n\n\t/**\n\t * Y0 position of the low value in pixels.\n\t */\n\tlowY0?: number;\n\n\t/**\n\t * X2 position of the low value in pixels.\n\t */\n\tlowX1?: number;\n\n\t/**\n\t * Y1 position of the low value in pixels.\n\t */\n\tlowY1?: number;\n\n\t/**\n\t * X0 position of the high value in pixels.\n\t */\n\thighX0?: number;\n\n\t/**\n\t * Y0 position of the high value in pixels.\n\t */\n\thighY0?: number;\n\n\t/**\n\t * Xz position of the high value in pixels.\n\t */\n\thighX1?: number;\n\n\t/**\n\t * Y1 position of the high value in pixels.\n\t */\n\thighY1?: number;\n\n\t/**\n\t * Orientation of the cnadlestick.\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tprotected _dindex = 0;\n\tprotected _sindex = 0;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._sindex = 0;\n\t\t\t\tthis._dindex = startIndex;\n\t\t\t\tif (this.dataItems.length == 1) {\n\t\t\t\t\tthis._startSegment(0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// this is done to avoid recursion with a lot of segments \n\t\t\t\t\twhile (this._dindex < endIndex - 1) {\n\t\t\t\t\t\tthis._startSegment(this._dindex);\n\t\t\t\t\t\tthis._sindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tthis._dindex = i;\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\t\t\t\t\t\t\tsprite.set(\"tooltipHTML\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (!this.get(\"xAxis\").inited || !this.get(\"yAxis\").inited) {\n\t\t\treturn false\n\t\t}\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\" || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\"))) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif(!this.get(\"tooltipDataItem\")){\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif(tooltip){\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\t\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n}\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t * @ignore\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 1 / this.dataItems.length * (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif(endIndex - startIndex < maxCount){\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\t\t\t\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivateRaw(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * Indicates if the bullet should be stacked on top of another bullet if it's\n\t * on the same position.\n\t * \n\t * Will work on horizontal or vertical axes only.\n\t *\n\t * @since 5.2.28\n\t * @default false\n\t */\n\tstacked?: boolean;\n\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["XYChart","this","chartContainer","children","push","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","isMeasured","topPlotContainer","themeTags","icon","x","y","_afterNew","_defaultThemes","super","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","states","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","fill","fillOpacity","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_beforeChanged","isDirty","get","_display","cancelTouch","gridContainer","_removeSeries","series","xAxis","markDirtyExtremes","yAxis","cursor","snapToSeries","handleWheel","wheelX","wheelY","wheelEvent","preventDefault","plotPoint","toLocal","documentPointToRoot","clientX","clientY","wheelStep","shiftY","deltaY","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","each","axis","start","end","position","fixPosition","newStart","newEnd","getPrivate","Infinity","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_handleSetWheel","_wheelDp","dispose","sign","diff","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","downPoint","undefined","_isPanning","_movePoints","_handlePinch","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","point","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","Math","max","s","e","sa","ea","downStartY","downEndY","_handleCursorPosition","cursorPoint","snapToSeriesBy","dataItems","isHidden","isHiding","startIndex","endIndex","dataItem","tooltipDataItem","closestItem","minDistance","distance","abs","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_updateCursor","_addCursor","_prepareChildren","_colorize","previous","_prevSettings","_disposeProperty","_setChart","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","_handleScrollbar","grip","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","moveValue","value","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","_updateChartLayout","left","right","processAxis","_axis","_handleAxisSelection","force","indexOf","setRaw","updateGrips","visible","show","hide","inPlot","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","arrangeTooltips","hh","plotT","plotB","tooltips","closest","closestPoint","sum","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","_tooltipToLocal","tooltipContainer","count","sort","a","b","prevY","centerY","top","bottom","min","_fy","reverse","prevBottom","bounds","className","XYChartDefaultTheme","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","pinchZoomX","pinchZoomY","legendLabelText","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","layer","exportable","moveThreshold","strokeDasharray","ariaLabel","translate","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","crisp","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","gridInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","autoZoom","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","XYCursor","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","ev","_handleLineFocus","_handleLineBlur","document","_handleLineMove","keyCode","dir","increment","focused","getCellWidthPosition","_line","alwaysShow","_tooltipX","_updateXLine","_tooltipY","_updateYLine","_handleSyncWith","syncWith","_updateChildren","_getPoint","_toX","animate","key","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","selection","_inPlot","rootPoint","_getPosition","charAt","lastPoint","_lastPoint","skipEvent","xyPos","userPositionX","userPositionY","xy","handleCursorShow","_updateLines","_updateSelection","_onHide","handleCursorHide","_onShow","_dispose","Axis","background","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","ghostLabel","makeLabel","adapters","disable","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","playing","once","_markDirtyKey","_markDirty","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","_bullets","axisRange","_seriesAxisRanges","_start","_end","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","_updateTooltipBounds","updateTooltipBounds","_updateBounds","axisHeadersContainer","onPrivate","markDirtySize","hideDataItem","_toggleDataItem","showDataItem","tick","bullet","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updatePositions","labels","ticks","axisFills","_updateGhost","localBounds","gWidth","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","processSeriesDataItem","_fields","_clearDirty","_sizeDirty","coordinateToPosition","coordinate","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","AxisLabel","AxisLabelRadial","AxisRenderer","template","make","gridCount","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","extra","_getPan","_point1","_point2","positionToCoordinate","_tooltip","_updateSize","markDirty","_clear","toggleVisibility","_positionTooltip","AxisRendererX","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToPoint","updateTick","endPosition","updateGrid","updateBullet","bulletPosition","previousBullet","previousSprite","updateFill","x0","x1","fillDrawMethod","num","pointerOrientation","oldBounds","AxisRendererY","innerHeight","y0","y1","AxisTick","DateAxis","_setBaseInterval","interval","_baseDuration","_fixZoomFactor","baseMainDuration","_groupData","groupInterval","_dataGrouped","_handleRangeChange","mainDataSetId","setDataSet","_seriesDataGrouped","intervals","baseDuration","_dataSets","fields","baseAxis","_valueYFields","_valueXFields","_mainDataItems","groupCallback","groupOriginals","firstDay","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","field","firstDate","prevNewDataItem","dataContext","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_dataSetId","_groupingCalculated","getGroupInterval","getIntervalMax","_intervalMax","getIntervalMin","_intervalMin","selectionMin","selectionMax","modifiedDifference","current","newId","fieldName","endIndex2","firstDataItem","lastDataItem","lastDate","outOfSelection","_adjustMinMax","_strictMode","_intervalDuration","_saveMinMax","id","_getM","_prepareAxisItems","nextGridUnit","format","previousValue","formats","_dataItems","processDataItem","date","dateFormatter","j","inited","_markDirtyAxes","_getDelta","_deltaMinMax","_fixMin","startTime","endTime","_fixMax","_updateDates","_date","open","close","getDataItemPositionX","cellLocation","axisLocation","openValue","closeValue","_baseValue","valueToPosition","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","positionToValue","NaN","result","diValue","first","second","nextItem","value1","zoomToDates","zoomToValues","positionToDate","dateToPosition","GaplessDateAxis","valueFields","dates","_dates","found","_updateAllDates","len","itemValue","valueToIndex","findex","floor","_seriesValuesDirty","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","_frequency","realDuration","selectedItems","startDate","previousPosition","minDifference","realValue","Grid","isPrivateDirty","ValueAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","_valuesDirty","_getMinMax","_getSelectionMinMax","_formatText","numberFormat","formatter","getNumberFormatter","differencePower","minLog","_minLogAdjusted","log","LOG10E","pow","stepPower","decCount","fillEndPosition","hasTag","minMaxStep","stepDecimalPlaces","E","treatZeroAs","valueToFinalPosition","getX","getY","_cellLocation","getStackedXValueWorking","getStackedYValueWorking","basePosition","cellEndValue","fixSmallStep","vc","fieldWorking","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","isShowing","range","_minReal","_maxReal","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","LN10","minDiff","initialMin","initialMax","minAdapted","fold","maxAdapted","strictMinMaxSelection","strict","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","BaseColumnSeries","_makeGraphics","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_stackDirty","_toggleColumn","_updateGraphics","_skipped","legendDataItem","markerRectangle","stroke","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","l","t","vcy","vcx","fitW","fitH","offset","stackToItemY","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","list","promises","Promise","all","bullets","column","setting","_getTooltipTarget","Candlestick","_draw","CandlestickSeries","mainContainer","getRaw","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","orientation","_xLowField","_xHighField","_yLowField","_yHighField","_updateCandleGraphics","pl0","pl1","ph0","ph1","ColumnSeries","LineSeries","strokes","fills","_fillGenerator","p","makeStroke","makeFill","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","_valueFields","_endIndex","_clearGraphics","_sindex","_dindex","_startSegment","clear","dataItemIndex","currentEndIndex","fillTemplate","originalTemplate","strokeTemplate","xOpenFieldValue","yOpenFieldValue","basePosX","basePosY","baseField","segments","points","fillVisible","getOpen","o","_getPoints","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","p0","p1","p2","p3","prev","_previousPoint","pp0","pp1","pp2","pp3","_points","_firstPoint","segment","context","createLegendMarker","marker","interactive","disabledColor","bulletFunction","XYSeries","_setRawDefault","_removeAxisRange","_updateFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","_shouldMakeBullet","xName","xCapName","yName","yCapName","xLetter","yLetter","low","high","_fixVC","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_dataProcessed","_stack","_unstack","getStackedXValue","getStackedYValue","_markStakedDirtyStack","minBulletDistance","_showBullets","_psi","_pei","_selectionProcessed","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","mainContainerMask","_mainContainerMask","mask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","stackToSeries","stackToItem","stackValue","stackedToSeries","_markDataSetDirty","_afterDataChange","_aggregatesCalculated","_positionBullet","_shouldShowBullet","_positionX","_positionY","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","_markDirtyStack","stackedSeries","hideTooltip","markDirtyText","txt","_emptyDataItem","valueLabel","_getItemReaderLabel","_position","resetExtremes","XYChartScrollbar","Scrollbar","interactiveChildren","Graphics","_addOrientationClass","startGrip","endGrip","remove","_updateThumb","overlay","CategoryAxis","_itemMap","startCategory","endCategory","openKey","otherAxis","startDataItem","endDataItem","hasValue","f","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","_axisLocation","category","dataItemToPosition","axisPositionToIndex","seriesDataItem","zoomToIndexes","zoomToCategories","CategoryDateAxis","previousIndex","previousUnitValue","changed","skip","unitValue","added","pop","shouldAdd","item","classNames","concat","DurationAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","AxisBullet","Entity","OHLC","lY","hY","lX","hX","OHLCSeries","List","Template","_new","SmoothedYLineSeries","_setDefault","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_context","_t","stepAfter","prototype","areaStart","areaEnd","lineStart","_point","lineEnd","closePath","StepLineSeries","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","am5xy","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}